[{"title":"Getting Started with FastFzy","type":0,"sectionRef":"#","url":"/fast-fzy/docs/intro","content":"Getting Started with FastFzy Here are some quick links to get started using FastFzy: Installation guideAPI Docs","keywords":""},{"title":"Installation","type":0,"sectionRef":"#","url":"/fast-fzy/docs/installation","content":"","keywords":""},{"title":"Method 1 - Wally​","type":1,"pageTitle":"Installation","url":"/fast-fzy/docs/installation#method-1---wally","content":"Setup Wally by using wally init.Add howmanysmall/FastFzy as a dependency. [dependencies] FastFzy = &quot;howmanysmall/fast-fzy@^1.0.0&quot;  "},{"title":"Method #2 - HttpService​","type":1,"pageTitle":"Installation","url":"/fast-fzy/docs/installation#method-2---httpservice","content":"This method uses HttpService to install FastFzy. In Roblox Studio, paste the following command into your command bar.Run the following command: local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local HttpService = game:GetService(&quot;HttpService&quot;) local HttpEnabled = HttpService.HttpEnabled HttpService.HttpEnabled = true type Result&lt;T, E&gt; = { Success: true, Value: T, } | { Success: false, Error: E, } local function RequestAsync(RequestDictionary) return HttpService:RequestAsync(RequestDictionary) end local function GetAsync(Url, Headers): Result&lt;string, string&gt; Headers[&quot;cache-control&quot;] = &quot;no-cache&quot; local Success, ResponseDictionary = pcall(RequestAsync, { Headers = Headers; Method = &quot;GET&quot;; Url = Url; }) if not Success then return { Success = false; Error = `{ResponseDictionary}`; } end if ResponseDictionary.Success then return { Success = true; Value = ResponseDictionary.Body; } end return { Success = false; Error = `HTTP {ResponseDictionary.StatusCode}: {ResponseDictionary.StatusMessage}`; } end local function Initify(Root) local InitFile = Root:FindFirstChild(&quot;init&quot;) or Root:FindFirstChild(&quot;init.lua&quot;) or Root:FindFirstChild(&quot;init.luau&quot;) or Root:FindFirstChild(&quot;init.client.lua&quot;) or Root:FindFirstChild(&quot;init.client.luau&quot;) or Root:FindFirstChild(&quot;init.server.lua&quot;) or Root:FindFirstChild(&quot;init.server.luau&quot;) if InitFile then InitFile.Name = Root.Name InitFile.Parent = Root.Parent for _, Child in Root:GetChildren() do Child.Parent = InitFile end Root:Destroy() Root = InitFile end for _, Child in Root:GetChildren() do Initify(Child) end return Root end local FilesJson = GetAsync( &quot;https://api.github.com/repos/howmanysmall/fast-fzy/contents/src&quot;, {accept = &quot;application/vnd.github.v3+json&quot;} ) if not FilesJson.Success then error(FilesJson.Error) end local FilesList = HttpService:JSONDecode(FilesJson.Value) local FastFzy = Instance.new(&quot;Folder&quot;) FastFzy.Name = &quot;FastFzy&quot; for _, FileData in FilesList do local ModuleScript = Instance.new(&quot;ModuleScript&quot;) ModuleScript.Name = `{string.match(FileData.name, &quot;(%w+)%.luau?&quot;)}` local Result = GetAsync(FileData.download_url, {}) ModuleScript.Source = if Result.Success then `{Result.Value}` else `--[====[{Result.Error}]====]` ModuleScript.Parent = FastFzy end FastFzy.Parent = ReplicatedStorage Initify(FastFzy) HttpService.HttpEnabled = HttpEnabled "},{"title":"Next​","type":1,"pageTitle":"Installation","url":"/fast-fzy/docs/installation#next","content":"Now, check out the API reference! "},{"title":"FastFzy","type":0,"sectionRef":"#","url":"/fast-fzy/api/FastFzy","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#types","content":" "},{"title":"FzyConfiguration​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#FzyConfiguration","content":"&lt;/&gt; interface FzyConfiguration { CapitalMatchScore: number CaseSensitive: boolean ConsecutiveMatchScore: number DotMatchScore: number GapInnerScore: number GapLeadingScore: number GapTrailingScore: number MaxMatchLength: number SlashMatchScore: number WordMatchScore: number } Configuration for FastFzy. See FastFzy.CreateConfiguration for details. This affects scoring and how the matching is done.  "},{"title":"FilterResult​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#FilterResult","content":"&lt;/&gt; interface FilterResult { Index: number-- The index of the line in haystacks. Positions: {int}-- The positions of the needle in haystack. Score: number-- The score returned by FastFzy.Score String: string-- The line in haystacks. } An interface returned by FastFzy.BetterFilter. "},{"title":"Functions​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#functions","content":" "},{"title":"CreateConfiguration​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#CreateConfiguration","content":"&lt;/&gt; FastFzy.CreateConfiguration(maybeConfiguration: table) → FzyConfiguration Creates a new configuration for Fzy.  "},{"title":"IsFzyConfiguration​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#IsFzyConfiguration","content":"&lt;/&gt; FastFzy.IsFzyConfiguration(configuration: any) → boolean Returns true if it is a FzyConfiguration.  "},{"title":"HasMatch​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#HasMatch","content":"&lt;/&gt; FastFzy.HasMatch( configuration: FzyConfiguration, needle: string, haystack: string ) → boolean Check if needle is a subsequence of the haystack. Usually called before FastFzy.Score or FastFzy.Positions.  "},{"title":"IsPerfectMatch​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#IsPerfectMatch","content":"&lt;/&gt; FastFzy.IsPerfectMatch( configuration: FzyConfiguration, needle: string,-- must be a subsequence of haystack, or the result is undefined. haystack: string ) → boolean Computes whether a needle or haystack are a perfect match or not  "},{"title":"Score​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#Score","content":"&lt;/&gt; FastFzy.Score( configuration: FzyConfiguration, needle: string,-- must be a subsequence of haystack, or the result is undefined. haystack: string ) → number-- higher scores indicate better matches. See also FastFzy.GetMinScore and FastFzy.GetMaxScore. Compute a matching score.  "},{"title":"Positions​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#Positions","content":"&lt;/&gt; FastFzy.Positions( configuration: FzyConfiguration, needle: string,-- must be a subsequence of haystack, or the result is undefined. haystack: string ) → ( {int},-- indices, where indices[n] is the location of the nth character of needle in haystack. number-- the same matching score returned by score ) Compute the locations where fzy matches a string. Determine where each character of the needle is matched to the haystack in the optimal match.  "},{"title":"Filter​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#Filter","content":"&lt;/&gt; FastFzy.Filter( configuration: FzyConfiguration, needle: string, haystacks: {string} ) → { { idx, positions, score }, ... } Apply FastFzy.HasMatch and FastFzy.Positions to an array of haystacks. Returns an array with one entry per matching line in haystacks, each entry giving the index of the line in haystacks as well as the equivalent to the return value of positions for that line. Notice For Luau, I'd recommend using FastFzy.BetterFilter instead, as this specific function doesn't really have the best Luau support.  "},{"title":"BetterFilter​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#BetterFilter","content":"&lt;/&gt; FastFzy.BetterFilter( configuration: FzyConfiguration, needle: string, haystacks: {string} ) → {FilterResult} An alternative to FastFzy.Filter that returns an array of FastFzy.FilterResult. This is more ideal for Luau at the cost of some speed, as Luau does not support strict arrays the same way that TypeScript would  "},{"title":"GetMinScore​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#GetMinScore","content":"&lt;/&gt; FastFzy.GetMinScore() → number The lowest value returned by score. In two special cases: an empty needle, or a needle or haystack larger than than FastFzy.GetMaxLength, the FastFzy.Score function will return this exact value, which can be used as a sentinel. This is the lowest possible score.  "},{"title":"GetMaxScore​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#GetMaxScore","content":"&lt;/&gt; FastFzy.GetMaxScore() → number The score returned for exact matches. This is the highest possible score.  "},{"title":"GetMaxLength​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#GetMaxLength","content":"&lt;/&gt; FastFzy.GetMaxLength(configuration: FzyConfiguration) → number The maximum size for which fzy will evaluate scores.  "},{"title":"GetScoreFloor​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#GetScoreFloor","content":"&lt;/&gt; FastFzy.GetScoreFloor(configuration: FzyConfiguration) → number The minimum score returned for normal matches. For matches that don't return FastFzy.GetMinScore, their score will be greater than than this value.  "},{"title":"GetScoreCeiling​","type":1,"pageTitle":"FastFzy","url":"/fast-fzy/api/FastFzy#GetScoreCeiling","content":"&lt;/&gt; FastFzy.GetScoreCeiling(configuration: FzyConfiguration) → number The maximum score for non-exact matches. For matches that don't return FastFzy.GetMaxScore, their score will be less than this value. "}]